#!/bin/sh

# Check for any unstaged changes in tracked files
MODIFIED_UNSTAGED_FILES=$(git diff --name-only)
if [ -n "$MODIFIED_UNSTAGED_FILES" ]; then
  echo "Error: There are unstaged changes in tracked files:" >&2
  echo "$MODIFIED_UNSTAGED_FILES" >&2
  echo "Please stage all relevant files before committing." >&2
  exit 1
fi

# Check for any new, untracked files (that are not ignored)
NEW_UNTRACKED_FILES=$(git ls-files --others --exclude-standard)
if [ -n "$NEW_UNTRACKED_FILES" ]; then
  echo "Error: There are new untracked files:" >&2
  echo "$NEW_UNTRACKED_FILES" >&2
  echo "Please stage or gitignore these files before committing." >&2
  exit 1
fi

# Staged files
STAGED_FILES=$(git diff --cached --name-only)

# Check if either DEVLOG.md or TASKS.md has staged changes
devlog_staged=$(echo "$STAGED_FILES" | grep -c "DEVLOG.md")
tasks_staged=$(echo "$STAGED_FILES" | grep -c "TASKS.md")

# If one is staged but not the other, exit with an error
if [ "$devlog_staged" -ne "$tasks_staged" ]; then
  echo "Error: DEVLOG.md and TASKS.md must be staged or unstaged together." >&2
  exit 1
fi

# If both are unstaged, but there are other staged files, require them to be updated.
if [ "$devlog_staged" -eq 0 ] && [ -n "$STAGED_FILES" ]; then
    echo "Error: DEVLOG.md and TASKS.md have not been updated or staged." >&2
    echo "Please update them and stage them before committing." >&2
    exit 1
fi


exit 0
